/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { GetMpcKeysResponse } from '../models';
/**
 * KeysBetaApi - axios parameter creator
 * @export
 */
export declare const KeysBetaApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns a list of MPC signing keys of the workspace. For each key, the list of players associated with it is attached. **Note:**  This endpoint is currently in beta and might be subject to changes.
     * @summary Get list of mpc keys
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMpcKeysList: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of MPC signing keys of a specific user. For each key, the list of players associated with it is attached. **Note:** This endpoint is currently in beta and might be subject to changes.
     * @summary Get list of mpc keys by `userId`
     * @param {string} userId The id for the user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMpcKeysListByUser: (userId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * KeysBetaApi - functional programming interface
 * @export
 */
export declare const KeysBetaApiFp: (configuration?: Configuration) => {
    /**
     * Returns a list of MPC signing keys of the workspace. For each key, the list of players associated with it is attached. **Note:**  This endpoint is currently in beta and might be subject to changes.
     * @summary Get list of mpc keys
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMpcKeysList(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetMpcKeysResponse>>;
    /**
     * Returns a list of MPC signing keys of a specific user. For each key, the list of players associated with it is attached. **Note:** This endpoint is currently in beta and might be subject to changes.
     * @summary Get list of mpc keys by `userId`
     * @param {string} userId The id for the user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMpcKeysListByUser(userId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetMpcKeysResponse>>;
};
/**
 * KeysBetaApi - factory interface
 * @export
 */
export declare const KeysBetaApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns a list of MPC signing keys of the workspace. For each key, the list of players associated with it is attached. **Note:**  This endpoint is currently in beta and might be subject to changes.
     * @summary Get list of mpc keys
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMpcKeysList(options?: RawAxiosRequestConfig): AxiosPromise<GetMpcKeysResponse>;
    /**
     * Returns a list of MPC signing keys of a specific user. For each key, the list of players associated with it is attached. **Note:** This endpoint is currently in beta and might be subject to changes.
     * @summary Get list of mpc keys by `userId`
     * @param {KeysBetaApiGetMpcKeysListByUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMpcKeysListByUser(requestParameters: KeysBetaApiGetMpcKeysListByUserRequest, options?: RawAxiosRequestConfig): AxiosPromise<GetMpcKeysResponse>;
};
/**
 * Request parameters for getMpcKeysListByUser operation in KeysBetaApi.
 * @export
 * @interface KeysBetaApiGetMpcKeysListByUserRequest
 */
export interface KeysBetaApiGetMpcKeysListByUserRequest {
    /**
     * The id for the user
     * @type {string}
     * @memberof KeysBetaApiGetMpcKeysListByUser
     */
    readonly userId: string;
}
/**
 * KeysBetaApi - object-oriented interface
 * @export
 * @class KeysBetaApi
 * @extends {BaseAPI}
 */
export declare class KeysBetaApi extends BaseAPI {
    /**
     * Returns a list of MPC signing keys of the workspace. For each key, the list of players associated with it is attached. **Note:**  This endpoint is currently in beta and might be subject to changes.
     * @summary Get list of mpc keys
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KeysBetaApi
     */
    getMpcKeysList(): Promise<import("../response/fireblocksResponse").FireblocksResponse<GetMpcKeysResponse>>;
    /**
     * Returns a list of MPC signing keys of a specific user. For each key, the list of players associated with it is attached. **Note:** This endpoint is currently in beta and might be subject to changes.
     * @summary Get list of mpc keys by `userId`
     * @param {KeysBetaApiGetMpcKeysListByUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KeysBetaApi
     */
    getMpcKeysListByUser(requestParameters: KeysBetaApiGetMpcKeysListByUserRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<GetMpcKeysResponse>>;
}
